
//script
//    |var messages = {};
//    each val,head in text.pageJS
//        |messages.#{head} = '#{val}';
//each val,head in text.pageJS
  //  |{messages.#{head} = '#{val}'}
.hidden {{register.getMessages(#{JSON.stringify(text.pageJS)})}}
.container
    h1 #{text.h1Header}
    #registrationFormContainer.panel.panel-default
        .panel-heading
            h3.panel-title #{text.h3Header}

        .panel-body
            .alert.alert-warning(role="alert",ng-show="register.registrationError")
                //button.close(type="button", data-dismiss="alert")
                    //span(aria-hidden="true") &times;
                    //span.sr-only #{text.close}
                strong {{register.errorMessage}}
            form#registrationForm.credentials-form.form-horizontal(role="form",name="registrationForm", novalidate)
                //input#userType(type="hidden", name="userType", value="oilpress")
                fieldset#userDetails
                    legend #{text.userDetailsLegend}
                    .help-block #{text.requiredFieldsWarning}
                    //username
                    .form-group.has-warning
                        label.col-sm-2.control-label(for="username") #{text.usernameField}
                        .col-sm-10
                            input.form-control(id="username",name="username", type="text", ng-model="register.formData.username", required)
                    //password
                    .form-group.has-warning
                        label.col-sm-2.control-label(for="password") #{text.passwordField}
                        .col-sm-10
                            input.form-control(id="password",name="password", type="password", ng-model="register.formData.password", required)
                    //verifyPassword
                    .form-group(ng-class="{'has-error':register.formData.password !== register.formData.verifyPassword && registrationForm.verifyPassword.$dirty}")
                        label.col-sm-2.control-label(for="verifyPassword") #{text.verifyPasswordField}
                        .col-sm-10
                            input.form-control(id="verifyPassword",name="verifyPassword", type="password", ng-model="register.formData.verifyPassword", required)
                            p.help-block(ng-show="register.formData.password !== register.formData.verifyPassword && registrationForm.verifyPassword.$dirty") #{text.passwordMismatch}
                    //email
                    .form-group.has-warning(ng-class="{'has-error':registrationForm.email.$invalid && registrationForm.email.$dirty}")
                        label.col-sm-2.control-label(for="email") #{text.emailField}
                        .col-sm-10
                            input.form-control(id="email",name="email", type="email", ng-model="register.formData.email", required)
                            p.help-block(ng-show="registrationForm.email.$invalid && registrationForm.email.$dirty") #{text.enterValidEmail}
                    //afm
                    .form-group.has-warning(ng-class="{'has-error':registrationForm.afm.$invalid && registrationForm.afm.$dirty}")
                        label.col-sm-2.control-label(for="afm") #{text.afmField}
                        .col-sm-10
                            input.form-control(id="afm",name="afm", type="text", ng-model="register.formData.afm", required, minlength="9", maxlength="9")
                            p.help-block(ng-show="registrationForm.afm.$invalid && registrationForm.afm.$dirty") #{text.enterValidAFM}
                fieldset#personalDetails
                    legend #{text.personalDetailsLegend}
                    - var personalFields = [{id:"name"},{id:"address"},{id:"city"},{id:"state"},{id:"area_code"},{id:"phone"}];
                    - for (var i = 0, len = personalFields.length; i<len; i++)
                        .form-group
                            label.col-sm-2.control-label(for="#{personalFields[i].id}") #{text[personalFields[i].id+"Field"]}
                            .col-sm-10
                                -var type = ((personalFields[i].hasOwnProperty('type'))?personalFields[i].type:'text');
                                input.form-control(id="#{personalFields[i].id}",name="#{personalFields[i].id}", type="#{type}", ng-model="register.formData.#{personalFields[i].id}")
                br
                #alertPlaceholder
                .form-group
                    .col-sm-offset-2.col-sm-5
                        button#submitRegistration.btn.btn-primary.btn-lg(type="submit", ng-disabled="registrationForm.$invalid", register-user) #{text.submitButton}
                    .col-sm-5
                        a(ui-sref="login")
                            button#cancelRegistration.btn.btn-warning.btn-lg(type="button") #{text.cancelButton}
